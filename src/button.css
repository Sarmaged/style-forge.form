.sf-button:is(a, button, input[type='button'], input[type='submit'], input[type='reset']) { box-sizing: border-box }

.sf-button:is(a, button, input[type='button'], input[type='submit'], input[type='reset']) *,
.sf-button:is(a, button, input[type='button'], input[type='submit'], input[type='reset']) *::before,
.sf-button:is(a, button, input[type='button'], input[type='submit'], input[type='reset']) *::after
{ box-sizing: inherit }

.sf-button:is(button, input[type='button'], input[type='submit'], input[type='reset']) {
  appearance: auto;
  touch-action: manipulation;
}

.sf-button:where(a, button, input[type='button'], input[type='submit'], input[type='reset']) { cursor: pointer }

.sf-button:is(a, button, input[type='button'], input[type='submit'], input[type='reset']),
.sf-button:is(a, button, input[type='button'], input[type='submit'], input[type='reset']):hover
{
  display: inline-block;

  font-size: var(--sf-form-fz);
  font-family: var(--sf-form-ff);
  font-weight: 400;
  line-height: 1;

  color: hsl(var(--sf-form-c-txt));
  background: hsl(var(--sf-form-c-bg) / 20%);
  border: 1px solid hsl(var(--sf-form-c-bd) / 20%);

  text-align: center;
  text-decoration: none;
  text-transform: none;

  border-radius: var(--sf-form-radius);

  padding: var(--sf-form-p-input-block) var(--sf-form-p-input-inline);
}

a.sf-button:not([href]) {
  cursor: not-allowed;
  text-decoration: none;
  opacity: var(--sf-disabled);
  -webkit-tap-highlight-color: transparent;
}
a.sf-button:not([href]):hover { color: inherit }

.sf-button:where(button, input[type='button'], input[type='submit'], input[type='reset']):disabled {
  cursor: not-allowed;
  -webkit-tap-highlight-color: transparent;
  opacity: var(--sf-disabled);
}

.sf-button:where(a, button, input[type='button'], input[type='submit'], input[type='reset']):focus-visible {
  outline: 1px solid hsl(var(--sf-form-c-info));
  outline-offset: -1px;
}
