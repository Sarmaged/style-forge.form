name: Prepare Release Branch and Create PR

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  pull-requests: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure all branches are fetched

      - name: Check status before build
        run: git status

      - name: Verify user
        run: |
          AUTHOR=$(git log -1 --pretty=format:'%an')
          CODEOWNERS=$(cat .github/CODEOWNERS | grep -E '^.* @' | sed 's/.*@//g' | tr '\n' ' ')
          if [[ ! " ${CODEOWNERS[@]} " =~ " ${AUTHOR} " ]]; then
            echo "Unauthorized user: $AUTHOR"
            exit 1
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Check status after build
        run: git status

      - name: Update version in package.json
        run: |
          NEW_VERSION=${GITHUB_REF#refs/tags/v}
          jq --arg new_version "$NEW_VERSION" '.version = $new_version' package.json > temp.json && mv temp.json package.json
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build the package
        run: yarn build

      - name: Test
        run: |
          git status
          git diff

      - name: Create temporary branch and push changes
        run: |
          git fetch origin main:main # Ensure main branch is up to date
          git checkout main
          git pull origin main
          TEMP_BRANCH="release-v${NEW_VERSION}"
          git checkout -b $TEMP_BRANCH
          git add .
          git commit -m "Update version to $NEW_VERSION and upgrade dependencies"
          git push origin $TEMP_BRANCH
          echo "TEMP_BRANCH=$TEMP_BRANCH" >> $GITHUB_ENV

      - name: Test
        run: |
          git status
          git diff

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update version to ${{ env.NEW_VERSION }} and upgrade dependencies"
          branch: ${{ env.TEMP_BRANCH }}
          base: release
          title: "Release ${{ env.NEW_VERSION }}"
          body: "This PR updates the version to ${{ env.NEW_VERSION }} and upgrades dependencies."
          labels: release
